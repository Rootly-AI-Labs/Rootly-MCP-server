name: Tests

on: [push, pull_request]

jobs:
  local-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
    - run: uv python install 3.12 && uv sync --dev
    
    # Fast local validation  
    - name: Code quality checks
      run: |
        uv run ruff check .
        uv run pyright
    
    - name: Unit tests
      run: uv run pytest tests/unit/ --cov=src/rootly_mcp_server --cov-report=xml
    
    - name: Local integration tests
      env:
        ROOTLY_API_TOKEN: ${{ secrets.ROOTLY_API_TOKEN }}
      run: uv run pytest tests/integration/local/ -x
    
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml

  remote-tests:
    runs-on: ubuntu-latest
    needs: local-tests
    if: github.ref == 'refs/heads/main'  # Only on main branch
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
    - run: uv python install 3.12 && uv sync --dev
    
    # Wait for deployment (includes buffer)
    - name: Wait for remote deployment
      run: |
        echo "ðŸš€ Waiting for remote server deployment..."
        echo "Push time: $(date)"
        echo "Deployment takes 5+ min, waiting 7 min for safety..."
        sleep 420  # 7 minutes
    
    # Essential remote tests only
    - name: Test remote server essentials
      env:
        ROOTLY_API_TOKEN: ${{ secrets.ROOTLY_API_TOKEN }}
      run: uv run pytest tests/integration/remote/test_essential.py -v --timeout=60